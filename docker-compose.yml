version: '3.6'

services:
  api:
    build:
      context: .
      dockerfile: ./.docker/api.Dockerfile
    depends_on:
      - mysql
    command: ['sh', '-c', 'chmod +x /wait-for.sh && /wait-for.sh mysql:3306 -- yarn dev']
    restart: always
    ports:
      - ${APP_PORT}:3000
    volumes:
      - ./api:/app
      - ./.env:/app/.env
      - ./.docker/wait-for.sh:/wait-for.sh
    networks:
      - api-network
    environment:
      NODE_ENV: development

  mysql:
    image: mysql:5.7.31
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - ./db-data:/var/lib/mysql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    networks:
      - api-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.1.0
    restart: always
    depends_on:
      - mysql
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASS}
    ports:
      - ${PMA_PORT}:80
    networks:
      - api-network

# volumes:
#   db-data:
#     driver: local

networks:
  api-network:
    driver: bridge
